#!/bin/bash

PROGNAME=$(basename $0)
LOWERDIR=$PWD/@UTIL_DIR@:$PWD/@INST_DIR@:$PWD/@TREE_DIR@
SANDBOX=$PWD/@CONTAINER_DIR@
RPMTEST=$SANDBOX/merged

function sandbox()
{
    local cmd=$1
    shift
    case $cmd in
        mount)
            mkdir -p $SANDBOX/{upper,work} $RPMTEST
            mount -t overlay overlay \
                  -o userxattr \
                  -o lowerdir=$LOWERDIR \
                  -o upperdir=$SANDBOX/upper \
                  -o workdir=$SANDBOX/work \
                  $MOUNTARGS $RPMTEST
        ;;
        umount)
            umount -l $RPMTEST
        ;;
        prune)
            for dir in "$@"; do
                [ -d $dir ] && umount -ql $dir
            done
        ;;
        exec)
            @BWRAP@ --unshare-pid --dev-bind $RPMTEST / \
                    --dev /dev --proc /proc --chdir / \
                    --setenv PATH @CMAKE_INSTALL_PREFIX@/bin:/usr/bin "$@"
        ;;
        env)
            sandbox mount
            export LOWERDIR SANDBOX RPMTEST
            export -f sandbox
            export PS1='(env) \W# '
            sh
            sandbox umount
        ;;
        run)
            sandbox mount
            sandbox exec --bind $PWD $PWD --chdir $PWD "$@"
            sandbox umount
        ;;
    esac
}

if [ "$PROGNAME" == "sandbox" ]; then
    if [ $# == 0 ]; then
        @UNSHARE_CMD@ sh -c 'source '$0'; sandbox env'
    else
        @UNSHARE_CMD@ sh -c 'source '$0'; sandbox run "$@"' 'sh' "$@"
    fi
    exit 0
fi
