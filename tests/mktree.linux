#!/bin/sh

# Linux-native mktree backend using an OS-specific bootstrap script and
# lightweight Bubblewrap & OverlayFS sandboxing.

source ./mktree.common

OS_BUILDER=./mktree.@OS_NAME@
OS_VERSION=@OS_VERSION@
OS_EXTRA=./mktree.extra

BASE_DIR=$OUT_DIR/base
INST_DIR=$OUT_DIR/inst
TREE_DIR=$OUT_DIR/tree
SNAP_DIR=$OUT_DIR/snap
ENV_FILE=$BASE_DIR/$ENV_FILE

CMD=$1; shift

function mount_tree()
{
    [ $# == 0 ] && set $TREE_DIR $SNAP_DIR
    source ./atlocal
    RPMTREE=$INST_DIR:$BASE_DIR
    RPMTEST=$1
    trap "snapshot umount" EXIT
    snapshot mount $2
}

# Run CMD in a user namespace (if not root already)
if [ $(id -u) != 0 ]; then
    if [ -f /run/.toolboxenv ]; then
        # toolbox(1) support
        UNSHARE="sudo --preserve-env"
    else
        UNSHARE="@UNSHARE@ -r --mount --map-auto"
    fi
    $UNSHARE $0 $CMD "$@"
    exit
fi

case $CMD in
    build)
        if [ ! -d "$BASE_DIR" ]; then
            mkdir -p $CACHE_DIR
            source $OS_BUILDER
            [ -f "$OS_EXTRA" ] &&
            source $OS_EXTRA
        fi
        rm -rf $INST_DIR
        make_install $INST_DIR
    ;;
    env)
        set -a
        mount_tree
        [ -f "$ENV_FILE" ] && source $ENV_FILE
        echo "$ENV_MOTD"
        $SHELL
        exit 0
    ;;
    shell)
        mount_tree
        snapshot shell "$@"
        exit 0
    ;;
    check)
        mount_tree
        snapshot shell --chdir /srv ./rpmtests "$@"
    ;;
    reset)
        rm -rf $SNAP_DIR
    ;;
esac
