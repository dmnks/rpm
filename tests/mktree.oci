#!/bin/bash
#
# OCI-based mktree backend

set -e

PROGRAM=$(basename $0)
if [ "$PROGRAM" == "mktree" ]; then
    # Running from build directory
    MODE=@MKTREE_MODE@
    PODMAN=@PODMAN@
    CONTEXT=@CMAKE_SOURCE_DIR@
else
    # Running from source directory
    MODE=standalone
    PODMAN=${MKTREE_ENGINE:-podman}
    CONTEXT=..
fi

if [ $MODE == native ]; then
    FROM="--from @OS_NAME@:@OS_VERSION@"
else
    FROM=
fi

IMAGE=rpm
ARGS="-f Dockerfile $FROM $CONTEXT"
ROOTLESS=$([ $(id -u) == 0 ] && echo 0 || echo 1)
CMD=$1; shift

export ROOTLESS
source mktree.common

cmd_build()
{
    # Build base image
    if [ $MODE != isolated ]; then
        $PODMAN build --target base -t $IMAGE/base $ARGS
    fi

    # Add RPM install on top
    [ -n "$($PODMAN images -q $IMAGE)" ] && $PODMAN rmi $IMAGE
    case $MODE in
        native)
            # Native build
            id=$($PODMAN create $IMAGE/base)
            trap "$PODMAN rm $id >/dev/null" EXIT
            make_install $($PODMAN mount $id)
            $PODMAN commit -q $id $IMAGE
        ;;
        isolated)
            # Containerized build
            $PODMAN exec --workdir "$PWD" @MKTREE_CONTAINER@ \
                         ./mktree.rootfs build
            $PODMAN commit -q @MKTREE_CONTAINER@ $IMAGE
        ;;
        standalone)
            # Standalone build
            $PODMAN build --target full -t $IMAGE $ARGS
        ;;
    esac
}

cmd_shell()
{
    local opts=
    local vol="$PWD:/srv:z"

    while [ $# != 0 ]; do
        case $1 in
            # Useful for CI environments without a tty
            --interactive=*)    opts=$1 ;;
            --volatile)         vol=/srv ;;
            *)                  break ;;
        esac
        shift
    done

    $PODMAN run --privileged -it --rm --read-only --tmpfs /tmp -v $vol \
                --workdir /srv -e ROOTLESS=$ROOTLESS $opts $IMAGE "$@"
}

unshare()
{
    [ $(id -u) != 0 ] && [ $MODE == native ] || return 0
    $PODMAN unshare $0 $CMD "$@"
    exit
}

case $CMD in
    build)      unshare; cmd_build "$@" ;;
    shell)      cmd_shell "$@" ;;
esac
