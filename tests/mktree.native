#!/bin/bash
# Native mktree backend using lightweight sandboxing from test suite

PROGRAM=mktree
source ./$PROGRAM.common

OS_BUILD=./$PROGRAM.@OS_NAME@
CMD=$1; shift

TREE_DIR=$PWD/$PROGRAM.output
BASE_DIR=$TREE_DIR/base
INST_DIR=$TREE_DIR/inst
SBOX_DIR=$PWD/$PROGRAM.sandbox

# Run CMD in user namespace (if not root already)
function unshare()
{
    local cmd
    if [ $(id -u) == 0 ]; then
        return
    elif [ -f /run/.toolboxenv ]; then
        # toolbox(1) support
        cmd="sudo -E"
    else
        cmd="/usr/bin/unshare -rm --map-auto"
    fi
    $cmd $0 $CMD "$@"
    exit
}

# Run given command with sandbox mounted at RPMTEST
function run()
{
    set -a
    source ./atlocal
    source $OS_BUILD --env
    RPMTREE=$INST_DIR:$BASE_DIR
    RPMTEST=$SBOX_DIR/merged
    sandbox mount $SBOX_DIR
    "$@"
    sandbox umount $RPMTEST
}

case $CMD in
    build) unshare
        [ -d $BASE_DIR ] && exit
        $OS_BUILD $BASE_DIR
    ;;
    install)
        rm -rf $INST_DIR
        install $INST_DIR
    ;;
    shell) unshare "$@"
        run sandbox shell "$@"
    ;;
    env) unshare
        run $SHELL
    ;;
    reset) unshare
        rm -rf $SBOX_DIR
    ;;
    clean) unshare
        rm -rf $BASE_DIR
    ;;
esac
