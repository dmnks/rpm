#!/bin/bash
#
# Native mktree backend
#
# Base:                     OCI image (host-native)
# RPM build:                native
# Isolation of rpmtests:    bwrap
# Optimized for:            development
# Works without cmake:      no

if [ $(id -u) != 0 ]; then
    @PODMAN@ unshare $0 "$@"
    exit
fi

source ./mktree.common

FROM=@OS_NAME@:@OS_VERSION@
IMAGE=rpm

TREE_DIR=$PWD/mktree.output
INST_DIR=$TREE_DIR/inst
SANDBOX_DIR=$PWD/mktree.sandbox

ATSHELL_MOTD="
Welcome to RPM @CMAKE_PROJECT_VERSION@ Autotest shell!

This is like an interactive test with a writable snapshot
mounted at \$RPMTEST, with full host integration allowing
you to use your native tools to inspect and/or modify the
snapshot.

The usual test commands are available, e.g. runroot ...
To throw away the snapshot and start over, run: make reset

WARNING: This shell runs in a user namespace without file
system isolation so be cautious when using destructive
commands. Treat it like any other shell running on your
host.
"

# Mount the filesystem tree and return its location via $RPMTEST
# Accepts the --read-only flag
mount_tree()
{
    trap : INT  # Ensure cleanup on SIGINT
    BASE_DIR=$(@PODMAN@ image mount $IMAGE)
    RPMTREE=$INST_DIR:$BASE_DIR
    RPMTEST=$SANDBOX_DIR/tree
    if [ "$1" == "--read-only" ]; then
        mkdir -p $INST_DIR/$PWD
        snapshot mount
    else
        snapshot mount $SANDBOX_DIR
    fi
}

umount_tree()
{
    @PODMAN@ image umount $IMAGE >/dev/null
    snapshot umount
    chmod -Rf u+rwX rpmtests.dir $SANDBOX_DIR
}

CMD=$1; shift
case $CMD in
    build)
        # Build base image
        @PODMAN@ build --from $FROM --target base --tag $IMAGE .

        # Build RPM layer natively
        rm -rf "$INST_DIR"
        make_install $INST_DIR
    ;;
    atshell)
        set -a
        source ./atlocal
        mount_tree
        echo "$ATSHELL_MOTD"
        $SHELL
        umount_tree
    ;;
    shell)
        mount_tree
        snapshot shell "$@"
        umount_tree
    ;;
    check)
        mount_tree --read-only
        snapshot exec --tmpfs /tmp --bind $PWD $PWD --bind $BASE_DIR /mnt \
                      --setenv RPMTREE $INST_DIR:/mnt rpmtests -C $PWD "$@"
        umount_tree
    ;;
    reset)
        rm -rf "$SANDBOX_DIR"
    ;;
esac
