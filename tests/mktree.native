#!/bin/sh

# Native mktree backend using an OS-specific bootstrap script and lightweight
# sandboxing from the test-suite for isolation.

source ./mktree.common

OS_BUILD=./mktree.@OS_NAME@

TREE_DIR=$PWD/mktree.output
BASE_DIR=$TREE_DIR/base
INST_DIR=$TREE_DIR/inst

SHELL_DIR=$PWD/mktree.shell
CHECK_DIR=$PWD/mktree.check

CMD=$1; shift

# Run the given command with the given sandbox mounted at RPMTEST
function wrap()
{
    set -a
    source ./atlocal
    RPMTREE=$INST_DIR:$BASE_DIR
    RPMTEST=$1/tree
    sandbox mount $1
    shift
    "$@"
    sandbox umount $RPMTEST
}

# Run CMD in a user namespace (if not root already)
if [ $(id -u) != 0 ]; then
    if [ -f /run/.toolboxenv ]; then
        # toolbox(1) support
        UNSHARE="sudo --preserve-env"
    else
        UNSHARE="@UNSHARE@ -r --mount --map-auto"
    fi
    $UNSHARE $0 $CMD "$@"
    exit
fi

case $CMD in
    build)
        [ -d "$BASE_DIR" ] ||
        $OS_BUILD $BASE_DIR
        rm -rf $INST_DIR
        install $INST_DIR
    ;;
    shell)
        wrap $SHELL_DIR sandbox shell "$@"
    ;;
    check)
        rm -rf $CHECK_DIR
        wrap $CHECK_DIR sandbox shell --chdir /srv ./rpmtests "$@"
    ;;
    env)
        wrap $CHECK_DIR $SHELL
    ;;
    reset)
        rm -rf $SHELL_DIR
    ;;
    clean)
        rm -rf $BASE_DIR
    ;;
esac
