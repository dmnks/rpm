#!/bin/sh

OS_BUILD=./mktree.@OS_NAME@

TREE_DIR=$PWD/mktree.output
BASE_DIR=$TREE_DIR/base
INST_DIR=$TREE_DIR/inst
SAND_DIR=$PWD/mktree.sandbox

CMD=$1; shift

# Build and install RPM and the test-suite data into a directory
function make_install()
{
    export DESTDIR=$1
    local ld_conf_dir=$DESTDIR/@CMAKE_INSTALL_SYSCONFDIR@/ld.so.conf.d

    @CMAKE_MAKE_PROGRAM@ -C @CMAKE_BINARY_DIR@ install
    mkdir -p $ld_conf_dir
    echo @CMAKE_INSTALL_FULL_LIBDIR@ > $ld_conf_dir/rpm.conf
    ldconfig -r $DESTDIR @CMAKE_INSTALL_FULL_LIBDIR@

    cp -r @CMAKE_CURRENT_SOURCE_DIR@/data $DESTDIR/
    mkdir -p $DESTDIR/build
    ln -sf ../data/SOURCES $DESTDIR/build/
}

# Run CMD in a user namespace (if not root already)
if [ $(id -u) != 0 ]; then
    if [ -f /run/.toolboxenv ]; then
        # toolbox(1) support
        UNSHARE="sudo --preserve-env"
    else
        UNSHARE="@UNSHARE@ -r --mount --map-auto"
    fi
    $UNSHARE $0 $CMD "$@"
    exit
fi

case $CMD in
    build)
        [ -d "$BASE_DIR" ] ||
        $OS_BUILD $BASE_DIR
        rm -rf $INST_DIR
        make_install $INST_DIR
    ;;
    check)
        set -a
        source ./atlocal
        RPMTREE=$INST_DIR:$BASE_DIR
        RPMTEST=$SAND_DIR/tree
        trap "sandbox umount $RPMTEST" EXIT
        sandbox mount $SAND_DIR
        shift
        ./rpmtests "$@"
    ;;
    reset)
        rm -rf $SAND_DIR
    ;;
    clean)
        rm -rf $BASE_DIR
    ;;
esac
