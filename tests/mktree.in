#!/bin/sh

OS_BUILDER=./mktree.@OS_NAME@
OS_VERSION=@OS_VERSION@

OUT_DIR=$PWD/mktree.output
BASE_DIR=$OUT_DIR/base
INST_DIR=$OUT_DIR/inst
TREE_DIR=$OUT_DIR/tree
SNAP_DIR=$OUT_DIR/snap
CACHE_DIR=$PWD/mktree.cache

ENV_FILE=$BASE_DIR/.mktree.env
ENV_MOTD="
Welcome to RPM test environment!

This is like an interactive test but with
full host integration.

Your test tree is mounted at \$RPMTEST.
You can use the usual test commands, e.g.

  runroot rpm ...
"

CMD=$1; shift

# Build and install RPM and the test-suite data into a directory
function make_install()
{
    export DESTDIR=$1
    local ld_conf_dir=$DESTDIR/@CMAKE_INSTALL_SYSCONFDIR@/ld.so.conf.d

    @CMAKE_MAKE_PROGRAM@ -C @CMAKE_BINARY_DIR@ install
    mkdir -p $ld_conf_dir
    echo @CMAKE_INSTALL_FULL_LIBDIR@ > $ld_conf_dir/rpm.conf
    ldconfig -r $DESTDIR @CMAKE_INSTALL_FULL_LIBDIR@

    cp -r @CMAKE_CURRENT_SOURCE_DIR@/data $DESTDIR/
    mkdir -p $DESTDIR/build
    ln -sf ../data/SOURCES $DESTDIR/build/
}

function mount_tree()
{
    [ $# == 0 ] && set $TREE_DIR $SNAP_DIR
    source ./atlocal
    RPMTREE=$INST_DIR:$BASE_DIR
    RPMTEST=$1
    trap "snapshot umount" EXIT
    snapshot mount $2
}

# Run CMD in a user namespace (if not root already)
if [ $(id -u) != 0 ]; then
    if [ -f /run/.toolboxenv ]; then
        # toolbox(1) support
        UNSHARE="sudo --preserve-env"
    else
        UNSHARE="@UNSHARE@ -r --mount --map-auto"
    fi
    $UNSHARE $0 $CMD "$@"
    exit
fi

case $CMD in
    build)
        mkdir -p $CACHE_DIR
        [ -d "$BASE_DIR" ] ||
        source $OS_BUILDER
        rm -rf $INST_DIR
        make_install $INST_DIR
    ;;
    env)
        set -a
        mount_tree
        [ -f "$ENV_FILE" ] && source $ENV_FILE
        echo "$ENV_MOTD"
        $SHELL
        exit 0
    ;;
    shell)
        mount_tree
        snapshot shell "$@"
        exit 0
    ;;
    check)
        mount_tree
        snapshot shell --chdir /srv ./rpmtests "$@"
    ;;
    reset)
        rm -rf $SNAP_DIR
    ;;
esac
