#!/bin/sh

OS_BUILDER=./mktree.@OS_NAME@
OS_VERSION=@OS_VERSION@

OUT_DIR=$PWD/mktree.output
BASE_DIR=$OUT_DIR/base
INST_DIR=$OUT_DIR/inst
TREE_DIR=$OUT_DIR/tree
CACHE_DIR=$PWD/mktree.cache

CMD=$1; shift

# Manage fakechroot environments on top of a directory tree
function snapshot()
{
    local cmd=$1
    shift
    case $cmd in
        mount)
            local opts
            if [ $# != 0 ]; then
                mkdir -p $1/diff $1/work
                opts="-o upperdir=$1/diff,workdir=$1/work"
            fi
            [ ${ROOTLESS:-1} == 1 ] && opts+=" -o userxattr"
            mkdir -p ${RPMTEST}
            mount -t overlay sandbox \
                  -o lowerdir="${RPMTREE}" \
                  ${opts} ${RPMTEST}
        ;;
        umount)
            umount -ql $RPMTEST
        ;;
        prune)
            local dir
            for dir in "$@"; do
                [ -d "$dir" ] && umount -ql $dir
            done
            return 0
        ;;
        exec)
            (unset RPM_CONFIGDIR RPM_POPTEXEC_PATH
             cd ${RPMTEST} && \
             FAKECHROOT_BASE="${RPMTEST}" fakechroot "$@"
            )
        ;;
    esac
}

# Build and install RPM and the test-suite data into a directory
function make_install()
{
    export DESTDIR=$1
    local ld_conf_dir=$DESTDIR/@CMAKE_INSTALL_SYSCONFDIR@/ld.so.conf.d

    @CMAKE_MAKE_PROGRAM@ -C @CMAKE_BINARY_DIR@ install
    mkdir -p $ld_conf_dir
    echo @CMAKE_INSTALL_FULL_LIBDIR@ > $ld_conf_dir/rpm.conf
    ldconfig -r $DESTDIR @CMAKE_INSTALL_FULL_LIBDIR@

    cp -r @CMAKE_CURRENT_SOURCE_DIR@/data $DESTDIR/
    mkdir -p $DESTDIR/build
    ln -sf ../data/SOURCES $DESTDIR/build/
}

# Run CMD in a user namespace (if not root already)
if [ $(id -u) != 0 ]; then
    if [ -f /run/.toolboxenv ]; then
        # toolbox(1) support
        UNSHARE="sudo --preserve-env"
    else
        UNSHARE="@UNSHARE@ -r --mount --map-auto"
    fi
    $UNSHARE $0 $CMD "$@"
    exit
fi

case $CMD in
    build)
        mkdir -p $CACHE_DIR
        [ -d "$BASE_DIR" ] ||
        source $OS_BUILDER
        rm -rf $INST_DIR
        make_install $INST_DIR
    ;;
    check)
        RPMTREE=$INST_DIR:$BASE_DIR
        RPMTEST=$TREE_DIR
        trap "snapshot umount" EXIT
        snapshot mount
        ./rpmtests "$@"
    ;;
    setup)
        :
    ;;
esac
