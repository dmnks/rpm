#!/bin/bash

OS_BASE=$0.@OS_NAME@
IMAGE=rpm

function inst()
{
    local dir=$1
    @CMAKE_MAKE_PROGRAM@ -C @CMAKE_BINARY_DIR@ install DESTDIR=$dir
    mkdir -p $dir/@CMAKE_INSTALL_SYSCONFDIR@/profile.d \
             $dir/@CMAKE_INSTALL_SYSCONFDIR@/ld.so.conf.d
    echo "export PATH=@CMAKE_INSTALL_FULL_BINDIR@:/usr/bin" \
        > $dir/@CMAKE_INSTALL_SYSCONFDIR@/profile.d/rpm.sh
    echo @CMAKE_INSTALL_FULL_LIBDIR@ \
        > $dir/@CMAKE_INSTALL_SYSCONFDIR@/ld.so.conf.d/rpm.conf
    ldconfig -r $dir @CMAKE_INSTALL_FULL_LIBDIR@

    cp -r @CMAKE_CURRENT_SOURCE_DIR@/data $dir/
    mkdir -p $dir/usr/bin
    cp @TESTPROGS_STR@ $dir/usr/bin/
    mkdir -p $dir/build
    ln -sf /data/SOURCES $dir/build/
}

function bwo()
{
    local cmd=$1
    shift
    case $cmd in
        build)
            [ -d mktree.output/base ] && return
            $OS_BASE build
        ;;
        install)
            rm -rf mktree.output/inst
            inst $PWD/mktree.output/inst
        ;;
        shell)
            set -a
            source ./atlocal
            RPMTREE=$PWD/mktree.output/inst:$PWD/mktree.output/base
            RPMTEST=$PWD/mktree.sandbox/merged
            rm -rf mktree.sandbox
            sandbox mount mktree.sandbox
            sandbox shell "$@"
            sandbox umount $RPMTEST
        ;;
        env)
            set -a
            source ./atlocal
            RPMTREE=$PWD/mktree.output/inst:$PWD/mktree.output/base
            RPMTEST=$PWD/mktree.sandbox/merged
            rm -rf mktree.sandbox
            sandbox mount mktree.sandbox
            $SHELL
            sandbox umount $RPMTEST
        ;;
    esac
}

function oci()
{
    local cmd=$1
    shift
    case $cmd in
        build)
            podman image exists $IMAGE ||
            podman build -t $IMAGE \
                -f @CMAKE_SOURCE_DIR@/ci/Dockerfile \
                @CMAKE_SOURCE_DIR@
        ;;
        install)
            name=$(buildah from $IMAGE)
            dir=$(buildah mount $name)
            case $1 in
                "")
                    inst $dir
                ;;
                --reuse)
                    cp -pr $2/* $dir/
                ;;
            esac
            buildah images -q $IMAGE-new >/dev/null 2>&1 && buildah rmi $IMAGE-new
            buildah commit $name $IMAGE-new
            buildah umount $name
            buildah rm $name
        ;;
        toolbox)
            podman exec --workdir $PWD fedora-toolbox-37 ./mktree bwo install
        ;;
        shell)
            podman run --privileged --read-only -it --rm -v $PWD:/srv --workdir /srv $IMAGE-new "$@"
        ;;
        env)
            set -a
            source ./atlocal
            name=$(buildah from $IMAGE-new)
            dir=$(buildah mount $name)
            RPMTREE=/
            RPMTEST=$dir
            $SHELL
            buildah umount $name
            buildah rm $name
        ;;
    esac
}

$1 "${@:2}"
