AT_TESTED([rpm rpmbuild rpmquery])

m4_define([RPMTEST_SETUP],[[
export SANDBOX="${PWD}"
export RPMTEST="${PWD}/merged"
[ -d merged ] || sandbox mount
]])

m4_define([RPMDB_INIT],[
RPMTEST_SETUP
rm -rf "${RPMTEST}"`runroot rpm --eval '%_dbpath'`
runroot rpm --initdb
])

m4_define([RPMPY_RUN],[[
cat << EOF > ${RPMTEST}/test.py
# coding=utf-8
import rpm, sys
def myprint(msg = ''):
    sys.stdout.write('%s\n' % msg)
ts = rpm.ts()
ts.setFlags(rpm.RPMTRANS_FLAG_NOPLUGINS)
$1
EOF
runroot_other ${PYTHON} /test.py
]])

m4_define([RPMPY_CHECK],[
AT_SKIP_IF([$PYTHON_DISABLED])
AT_CHECK([RPMPY_RUN([$1])], [], [$2], [$3])
])

m4_define([RPMPY_TEST],[
AT_SETUP([$1])
AT_KEYWORDS([python])
RPMDB_INIT
RPMPY_CHECK([$2], [$3], [$4])
AT_CLEANUP
])

# Enable colored test output if available
m4_ifdef([AT_COLOR_TESTS], [AT_COLOR_TESTS])

AT_INIT

m4_rename([AT_CLEANUP], [AT_CLEANUP_ORIG])
m4_define([AT_CLEANUP],[
[[ -d merged ]] && umount -ql merged
AT_CLEANUP_ORIG($@)
])
