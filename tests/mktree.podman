#!/bin/bash
#
# Podman-based mktree backend using an OCI image to build and run RPM.
# Works standalone (outside of a build directory) too.

PROGRAM=$(basename $0)
CMD=$1; shift

if [ $(id -u) != 0 ]; then
    podman unshare $0 $CMD "$@"
    exit
fi

if [ "$PROGRAM" == "mktree" ]; then
    # Running from build directory
    CONTEXT=@CMAKE_SOURCE_DIR@
else
    # Running from source directory
    CONTEXT=..
fi

source ./snapshot

TREE_IMG=rpm
BASE_IMG=${TREE_IMG}-base
SNAP_IMG=${TREE_IMG}-snapshot

TREE_DIR=$PWD/mktree.dir
SNAP_DIR=$TREE_DIR/snapshot

SHELL_MOTD="
Welcome to RPM @CMAKE_PROJECT_VERSION@ container!

This is a container running a minimal version of the host
system in a writable snapshot, with the RPM build installed
and ready to experiment with.

To update the RPM installation with the latest source
changes, rerun this target.

To throw away the snapshot and start over, run:

  make reset
"

fix_perm()
{
    chmod -Rf u+rwX $SNAP_DIR rpmtests.dir
}

get_image_id()
{
    podman image inspect --format '{{.Id}}' $1
}

mount_tree()
{
    if [ "$1" == "--read-only" ]; then
        clean_up()
        {
            podman image umount $TREE_IMG >/dev/null
            fix_perm
        }
        trap clean_up EXIT
        RPMTEST=$(podman image mount $TREE_IMG)
        return
    fi

    clean_up()
    {
        snapshot umount
        podman image umount $SNAP_IMG >/dev/null
        fix_perm
    }
    trap clean_up EXIT

    RPMTREE=$(podman image mount $SNAP_IMG)
    RPMTEST=$SNAP_DIR/tree
    snapshot mount $SNAP_DIR
    ./mktree.native build --base $RPMTEST

    [ "$(get_image_id $SNAP_IMG)" == "$(get_image_id $BASE_IMG)" ] ||
    SHELL_MOTD+="\nNew base image is available, reset to use.\n"
}

case $CMD in
    build)
        mkdir -p $TREE_DIR

        # Build base image
        podman build --target base -t $BASE_IMG -f Dockerfile $CONTEXT
        podman image exists $SNAP_IMG || podman tag $BASE_IMG $SNAP_IMG
        touch $TREE_DIR/base
        [ "$1" == "--base" ] && exit

        # Build full image and finish unless native mode was selected
        if [ "$1" != "--native" ]; then
            podman build -t $TREE_IMG -f Dockerfile $CONTEXT
            exit
        fi

        if [ "$CONTEXT" == ".." ]; then
            echo "Native build is not supported in source dir." >&2
            exit 1
        fi

        # Build RPM natively, layer it on top
        name=$(buildah from $BASE_IMG)
        ./mktree.native build $(buildah mount $name)
        {
            buildah rmi $TREE_IMG
            buildah commit -q $name $TREE_IMG
            buildah umount $name
            buildah rm $name
        } >/dev/null
        touch $TREE_DIR/full
    ;;
    check)
        mount_tree --read-only
        snapshot exec --tmpfs /tmp --bind $PWD /srv --chdir /srv \
                      mktree check "$@"
    ;;
    shell)
        mount_tree
        echo -e "$SHELL_MOTD"
        snapshot shell "$@"
    ;;
    atshell)
        set -a
        source ./atlocal
        mount_tree
        $SHELL
    ;;
    reset)
        podman rmi -i $SNAP_IMG
        rm -rf "$SNAP_DIR" "$TREE_DIR/base"
    ;;
esac
