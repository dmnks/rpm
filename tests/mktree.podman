#!/bin/bash
#
# Podman-based mktree backend using an OCI image to build and run RPM.
# Works standalone (outside of a build directory) too.

PROGRAM=$(basename $0)
CMD=$1; shift

if [ $(id -u) != 0 ]; then
    podman unshare $0 $CMD "$@"
    exit
fi

if [ "$PROGRAM" == "mktree" ]; then
    # Running from build directory
    CONTEXT=@CMAKE_SOURCE_DIR@
else
    # Running from source directory
    CONTEXT=..
fi

source ./snapshot

IMAGE=rpm
IMAGE_BASE=${IMAGE}-base
TREE_DIR=$PWD/mktree.dir
SANDBOX_DIR=$TREE_DIR/sandbox

fix_perm()
{
    chmod -Rf u+rwX $SANDBOX_DIR rpmtests.dir
}

mount_tree()
{
    if [ "$1" == "--read-only" ]; then
        clean_up()
        {
            podman image umount $IMAGE >/dev/null
            fix_perm
        }
        trap clean_up EXIT
        RPMTEST=$(podman image mount $IMAGE)
        return
    fi

    if [ -f $SANDBOX_DIR/base ]; then
        if ! cmp -s {$TREE_DIR,$SANDBOX_DIR}/base; then
            echo >&2
            echo "Error: Base image has changed, aborting." >&2
            echo "Fix by recreating the sandbox with: make reset" >&2
            echo >&2
            exit
        fi
    else
        mkdir -p $SANDBOX_DIR
        cp {$TREE_DIR,$SANDBOX_DIR}/base
    fi

    clean_up()
    {
        snapshot umount
        podman image umount $IMAGE_BASE >/dev/null
        fix_perm
    }
    trap clean_up EXIT

    RPMTREE=$(podman image mount $IMAGE_BASE)
    RPMTEST=$SANDBOX_DIR/tree
    snapshot mount $SANDBOX_DIR
    ./mktree.native build --base $RPMTEST
}

case $CMD in
    build)
        mkdir -p $TREE_DIR

        # Build base image
        podman build --target base -t $IMAGE_BASE -f Dockerfile $CONTEXT
        podman image inspect --format '{{.Id}}' $IMAGE_BASE > $TREE_DIR/base
        [ "$1" == "--base" ] && exit

        # Build full image and finish unless native mode was selected
        if [ "$1" != "--native" ]; then
            podman build -t $IMAGE -f Dockerfile $CONTEXT
            exit
        fi

        if [ "$CONTEXT" == ".." ]; then
            echo "Native build is not supported in source dir." >&2
            exit 1
        fi

        # Build RPM natively, layer it on top
        name=$(buildah from $IMAGE_BASE)
        ./mktree.native build $(buildah mount $name)
        {
            buildah rmi $IMAGE
            buildah commit -q $name $IMAGE
            buildah umount $name
            buildah rm $name
        } >/dev/null
        touch $TREE_DIR/full
    ;;
    check)
        mount_tree --read-only
        snapshot exec --tmpfs /tmp --bind $PWD /srv --chdir /srv \
                      mktree check "$@"
    ;;
    shell)
        mount_tree
        snapshot shell "$@"
    ;;
    atshell)
        set -a
        source ./atlocal
        mount_tree
        $SHELL
    ;;
    reset)
        rm -rf "$SANDBOX_DIR"
    ;;
esac
