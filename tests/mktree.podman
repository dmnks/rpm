#!/bin/bash
#
# Podman-based mktree backend using an OCI image to build and run RPM.
# Works standalone (outside of a build directory) too.

PROGRAM=$(basename $0)
if [ "$PROGRAM" == "mktree" ]; then
    # Running from build directory
    PODMAN=@PODMAN@
    CONTEXT=@CMAKE_SOURCE_DIR@
    source ./mktree.common
else
    # Running from source directory
    PODMAN=$(echo $PROGRAM | cut -d'.' -f2)
    CONTEXT=..
fi

IMAGE=rpm
IMAGE_BASE=${IMAGE}-base
NAME=${IMAGE}-sandbox
CMD=$1; shift

if [ "$(basename $PODMAN)" == "docker" ]; then
    DOCKER=1
else
    DOCKER=0
fi

if [ $(id -u) == 0 ]; then
    ROOTLESS=${ROOTLESS:-0}
elif [ $DOCKER == 0 ]; then
    export ROOTLESS=1
    podman unshare $0 $CMD "$@"
    exit
fi

function sandbox_exists()
{
    test -n "$($PODMAN ps -aqf name=$NAME)"
}

case $CMD in
    build)
        target=full
        if [ "$1" == "--native" ]; then
            error=0
            if [ "$CONTEXT" == ".." ]; then
                error=1
                message="in source dir"
            fi
            if [ $DOCKER == 1 ]; then
                error=1
                message="with Docker"
            fi
            if [ $error == 1 ]; then
                echo "Native build is not supported $message." >&2
                exit 1
            fi
            target=base
        fi

        # Build (base) image
        $PODMAN build --target $target -t $IMAGE_BASE -f Dockerfile $CONTEXT

        # Finish unless building RPM natively
        if [ "$target" == "full" ]; then
            $PODMAN tag $IMAGE_BASE $IMAGE
            exit
        fi

        # Build RPM natively, layer it on top
        name=$(buildah from $IMAGE_BASE)
        export DESTDIR=$(buildah mount $name)
        install_rpm
        install_tests
        {
            buildah rmi $IMAGE 2>/dev/null
            buildah commit -q $name $IMAGE
            buildah umount $name
            buildah rm $name
        } >/dev/null
    ;;
    shell)
        if ! sandbox_exists; then
            $PODMAN create --privileged -it --name $NAME --hostname sandbox \
                           -e ROOTLESS=$ROOTLESS -v $PWD:/srv:z $IMAGE "$@" \
                           >/dev/null
        fi
        $PODMAN start --attach $NAME
        exit 0
    ;;
    update)
        if ! sandbox_exists; then
            echo "No sandbox exists yet." >&2
            exit 1
        fi
        export DESTDIR=$($PODMAN mount $NAME)
        install_rpm
        $PODMAN umount $NAME >/dev/null
    ;;
    check)
        # Pass select options to $PODMAN
        case "$1" in
            # Useful for CI environments without a tty
            --interactive=*) OPTS=$1; shift ;;
            *) OPTS= ;;
        esac
        $PODMAN run --privileged -it --rm --read-only --tmpfs /tmp \
                    -v $PWD:/srv:z --workdir /srv -e ROOTLESS=$ROOTLESS \
                    $OPTS $IMAGE mktree check "$@"
    ;;
    reset)
        {
            $PODMAN stop $NAME &&
            $PODMAN rm $NAME
        } >/dev/null
    ;;
    *)
        echo "Unsupported command." >&2
        exit 1
    ;;
esac
