#!/bin/bash
#
# Podman-based mktree backend using an OCI image to build and run RPM.
# Works standalone (outside of a build directory) too.

PROGRAM=$(basename $0)
if [ "$PROGRAM" == "mktree" ]; then
    # Running from build directory
    PODMAN=@PODMAN@
    CONTEXT=@CMAKE_SOURCE_DIR@
    source ./mktree.common
else
    # Running from source directory
    PODMAN=$(echo $PROGRAM | cut -d'.' -f2)
    CONTEXT=..
fi

IMAGE=rpm
IMAGE_BASE=${IMAGE}-base
NAME=${IMAGE}-sandbox
export ROOTLESS=${ROOTLESS:-$([ $(id -u) == 0 ] && echo 0 || echo 1)}
CMD=$1; shift

# Run CMD in a user namespace (if not root already)
if [ $(id -u) != 0 ]; then
    if [ -f /run/.toolboxenv ]; then
        # toolbox(1) support
        UNSHARE="sudo --preserve-env"
    else
        UNSHARE="podman unshare"
    fi
    $UNSHARE $0 $CMD "$@"
    exit
fi

case $CMD in
    build)
        target=full
        if [ "$1" == "--native" ]; then
            error=0
            if [ "$CONTEXT" == ".." ]; then
                error=1
                message="in source dir"
            fi
            if [ "$(basename $PODMAN)" == "docker" ]; then
                error=1
                message="with Docker"
            fi
            if [ $error == 1 ]; then
                echo "Native build not supported $message." >&2
                exit 1
            fi
            target=base
        fi

        # Build (base) image
        $PODMAN build --target $target -t $IMAGE_BASE -f Dockerfile $CONTEXT

        # Finish unless building RPM natively
        if [ "$target" == "full" ]; then
            podman tag $IMAGE_BASE $IMAGE
            exit
        fi

        # Build RPM natively, layer it on top
        name=$(buildah from $IMAGE_BASE)
        make_install $(buildah mount $name)
        buildah rmi $IMAGE
        buildah commit $name $IMAGE
        buildah umount $name
        buildah rm $name
    ;;
    shell)
        if [ -n "$($PODMAN ps -a -q -f name=$NAME)" ]; then
            $PODMAN start $NAME >/dev/null
            $PODMAN attach $NAME
            exit
        fi
        $PODMAN run --privileged -it --name $NAME --hostname sandbox \
                    -e ROOTLESS=$ROOTLESS -v $PWD:/srv:z $IMAGE "$@"
        exit 0
    ;;
    check)
        # Pass select options to $PODMAN
        case "$1" in
            # Useful for CI environments without a tty
            --interactive=*) OPTS=$1; shift ;;
            *) OPTS= ;;
        esac
        $PODMAN run --privileged -it --rm --read-only --tmpfs /tmp \
                    -v /srv --workdir /srv -e ROOTLESS=$ROOTLESS \
                    $OPTS $IMAGE mktree check "$@"
    ;;
    reset)
        $PODMAN stop $NAME >/dev/null &&
        $PODMAN rm $NAME >/dev/null
    ;;
    *)
        echo "Unsupported command." >&2
        exit 1
    ;;
esac
