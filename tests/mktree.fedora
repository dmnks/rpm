#!/bin/bash
#
# Fedora-native mktree backend using DNF to bootstrap a minimal OS tree with
# the RPM runtime and test dependencies but no stock RPM preinstalled.
# Lightweight snapshotting built into the test-suite is used for isolation.

# Run in a user namespace (if not root already)
if [ $(id -u) != 0 ]; then
    if [ -f /run/.toolboxenv ]; then
        # toolbox(1) support
        UNSHARE="sudo --preserve-env"
    else
        UNSHARE="unshare -r --mount --map-auto"
    fi
    $UNSHARE $0 "$@"
    exit
fi

source ./mktree.common

# Obtain source dir (or common git-worktree(1) if one exists)
git() { command git -C "@CMAKE_SOURCE_DIR@" "$@"; }
if git rev-parse --is-inside-work-tree >/dev/null 2>&1; then
    SOURCE_DIR=$(git rev-parse --path-format=absolute --git-common-dir |
                 xargs dirname)
else
    SOURCE_DIR=@CMAKE_SOURCE_DIR@
fi

# Build-agnostic dirs, prefer those in source dir
[ -d "$SOURCE_DIR/mktree.output" ] || SOURCE_DIR=$PWD
BASE_DIR=$SOURCE_DIR/mktree.output/base
CACHE_DIR=$SOURCE_DIR/mktree.cache

# Build-specific dirs
TREE_DIR=$PWD/mktree.output
INST_DIR=$TREE_DIR/inst
SANDBOX_DIR=$PWD/mktree.sandbox

RPM_MACROS="
%_netsharedpath %{nil}
%__transaction_systemd_inhibit %{nil}
"

ATSHELL_MOTD="
Welcome to RPM @CMAKE_PROJECT_VERSION@ Autotest shell!

This is like an interactive test with a writable snapshot
mounted at \$RPMTEST, with full host integration allowing
you to use your native tools to inspect and/or modify the
snapshot.

The usual test commands are available, e.g. runroot ...
To throw away the snapshot and start over, run: make reset

WARNING: This shell runs in a user namespace without file
system isolation so be cautious when using destructive
commands. Treat it like any other shell running on your
host.
"

dnf()
{
    HOME=$CACHE_DIR command dnf \
        --installroot=$BASE_DIR \
        --releasever=@OS_VERSION@ \
        --setopt=cachedir=$CACHE_DIR/dnf \
        --setopt=keepcache=1 \
        --setopt=install_weak_deps=0 \
        --disablerepo=\* --enablerepo=fedora,updates \
        --exclude=rpm,systemd-udev "$@"
}

mount_tree()
{
    local dir=$SANDBOX_DIR
    trap : INT  # Continue on SIGINT
    if [ "$1" == "--read-only" ]; then
        unset dir
    fi
    RPMTREE=$INST_DIR:$BASE_DIR
    RPMTEST=$SANDBOX_DIR/tree
    snapshot mount $dir
}

umount_tree()
{
    snapshot umount
}

fix_perm()
{
    chmod -Rf u+rwX "$@"
}

CMD=$1; shift
case $CMD in
    build)
        mkdir -p $CACHE_DIR
        echo "$RPM_MACROS" > $CACHE_DIR/.rpmmacros

        dnf install -y \
            bash \
            binutils \
            bubblewrap \
            bzip2 \
            cmake \
            coreutils \
            cpio \
            curl \
            dbus-libs \
            debugedit \
            diffutils \
            elfutils-libelf \
            elfutils-libs \
            file \
            file-libs \
            findutils \
            gawk \
            gcc \
            gdb-minimal \
            glibc \
            gpg \
            grep \
            gzip \
            ima-evm-utils \
            libacl \
            libarchive \
            libcap \
            libfsverity \
            libgomp \
            libzstd \
            lua-libs \
            make \
            openssl-libs \
            patch \
            pkgconf-pkg-config \
            popt \
            python3 \
            rpm-sequoia \
            sed \
            shadow-utils \
            sqlite-libs \
            tar \
            unzip \
            util-linux-core \
            which \
            xz \
            xz-libs \
            zlib \
            zstd

        # Enable DNS resolution
        cp /etc/resolv.conf $BASE_DIR/etc/

        # Point RPM to newly created database
        echo "%_dbpath $(rpm --eval '%_dbpath')" > $BASE_DIR/root/.rpmmacros

        # Configure default shell for root user
        cp -r $BASE_DIR/{etc/skel/.,/root}

        fix_perm $BASE_DIR

        # Add RPM installation layer
        rm -rf "$INST_DIR"
        make_install $INST_DIR
    ;;
    atshell)
        set -a
        source ./atlocal
        mount_tree

        export CACHE_DIR
        export BASE_DIR=$RPMTEST
        export -f dnf

        echo "$ATSHELL_MOTD"
        $SHELL

        umount_tree
        fix_perm $SANDBOX_DIR
    ;;
    shell)
        mount_tree
        snapshot shell "$@"
        umount_tree
        fix_perm $SANDBOX_DIR
    ;;
    check)
        mount_tree --read-only
        snapshot exec --tmpfs /tmp --bind $PWD $PWD --setenv RPMTREE $RPMTREE \
                      rpmtests -C $PWD "$@"
        umount_tree
        fix_perm rpmtests.dir
    ;;
    reset)
        rm -rf "$SANDBOX_DIR"
    ;;
esac
