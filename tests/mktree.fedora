#!/bin/bash
#
# Fedora-native mktree backend using DNF to bootstrap a minimal OS tree with
# the RPM runtime and test dependencies but no stock RPM preinstalled.
# Lightweight snapshotting built into the test-suite is used for isolation.

if [ $(id -u) != 0 ]; then
    podman unshare $0 "$@"
    exit
fi

source ./mktree.common

FROM=@OS_NAME@:@OS_VERSION@
IMAGE=rpm
CMD=$1; shift

ATSHELL_MOTD="
Welcome to RPM test environment!

This is like an interactive test with a writable \$RPMTEST
tree, but with full host integration so you can use your
native tools to inspect or modify the tree.

The shell runs in a user namespace WITHOUT filesystem
isolation so be mindful when using destructive commands.
Treat it like any other shell on your host.

The usual test commands are available, e.g.

  runroot rpm ...

To factory-reset the tree, leave this shell and run:

  make reset
"

run()
{
    trap : INT
    RPMTEST=$(podman image mount $IMAGE)
    if [ "$1" == "--rw" ]; then
        export RPMTREE=$RPMTEST
        shift
    fi
    "$@"
    podman image umount $IMAGE >/dev/null
}

case $CMD in
    build)
        # Build base image
        podman build --from $FROM --target base --tag $IMAGE/base .

        # Add RPM install on top
        podman image exists $IMAGE && podman rmi $IMAGE
        id=$(buildah from $IMAGE/base)
        make_install $(buildah mount $id)
        buildah commit -q --rm $id $IMAGE
    ;;
    atshell)
        echo "$ATSHELL_MOTD"
        run --rw ./rpmtests.sh --shell
    ;;
    shell)
        run --rw ./rpmtests.sh --shell snapshot shell
    ;;
    check)
        run snapshot exec --tmpfs /tmp --bind $PWD /srv rpmtests -C /srv "$@"
    ;;
    reset)
        ./rpmtests.sh --reset
    ;;
esac
